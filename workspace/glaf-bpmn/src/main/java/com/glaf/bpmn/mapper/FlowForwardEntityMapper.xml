<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.bpmn.mapper.FlowForwardEntityMapper">

	<resultMap id="flowForwardEntityResultMap" type="com.glaf.bpmn.domain.FlowForwardEntity">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<result property="processId" column="process_id" jdbcType="VARCHAR" />
		<result property="activDefId" column="activ_d_id" jdbcType="VARCHAR" />
		<result property="activDefNext" column="activ_d_next" jdbcType="VARCHAR" />
		<result property="sendtype" column="sendtype" jdbcType="INTEGER" />
		<result property="sendtimes" column="sendtimes" jdbcType="INTEGER" />
	</resultMap>


	<insert id="insertFlowForwardEntity" parameterType="com.glaf.bpmn.domain.FlowForwardEntity">
		insert into flow_forward
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id
			<if test="processId != null">
				,process_id
			</if>
			<if test="activDefId != null">
				,activ_d_id
			</if>
			<if test="activDefNext != null">
				,activ_d_next
			</if>
			<if test="sendtype != null">
				,sendtype
			</if>
			<if test="sendtimes != null">
				,sendtimes
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="processId != null">
				,#{processId, jdbcType=VARCHAR}
			</if>
			<if test="activDefId != null">
				,#{activDId, jdbcType=VARCHAR}
			</if>
			<if test="activDefNext != null">
				,#{activDNext, jdbcType=VARCHAR}
			</if>
			<if test="sendtype != null">
				,#{sendtype, jdbcType=INTEGER}
			</if>
			<if test="sendtimes != null">
				,#{sendtimes, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>


	<update id="updateFlowForwardEntity" parameterType="com.glaf.bpmn.domain.FlowForwardEntity">
		update
		flow_forward
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="processId != null">
				process_id = #{processId, jdbcType=VARCHAR},
			</if>
			<if test="activDefId != null">
				activ_d_id = #{activDefId, jdbcType=VARCHAR},
			</if>
			<if test="activDefNext != null">
				activ_d_next = #{activDefNext, jdbcType=VARCHAR},
			</if>
			<if test="sendtype != null">
				sendtype = #{sendtype, jdbcType=INTEGER},
			</if>
			<if test="sendtimes != null">
				sendtimes = #{sendtimes, jdbcType=INTEGER},
			</if>
		</trim>
		where
		id = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteFlowForwardEntityById" parameterType="string">
		delete from flow_forward
		where id = #{id}
	</delete>


	<delete id="deleteFlowForwardEntities" parameterType="com.glaf.bpmn.query.FlowForwardQuery">
		delete from flow_forward
		where ( id IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
		</foreach>
		)
	</delete>


	<select id="getFlowForwardEntityById" parameterType="string"
		resultMap="flowForwardEntityResultMap">
		select * from flow_forward where id = #{id}
	</select>


	<select id="getFlowForwardEntityCount" parameterType="map"
		resultType="int">
		select count(*)
		<include refid="selectFlowForwardEntitiesSql" />
	</select>


	<select id="getFlowForwardEntityCountByQueryCriteria"
		parameterType="com.glaf.bpmn.query.FlowForwardQuery" resultType="int">
		select count(*)
		<include refid="selectFlowForwardEntitiesSql" />
	</select>


	<select id="getFlowForwardEntities" parameterType="map"
		resultMap="flowForwardEntityResultMap">
		select E.*
		<include refid="selectFlowForwardEntitiesSql" />
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
	</select>

	<select id="getFlowForwardEntitiesByQueryCriteria"
		parameterType="com.glaf.bpmn.query.FlowForwardQuery" resultMap="flowForwardEntityResultMap">
		select E.*
		<include refid="selectFlowForwardEntitiesSql" />
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
	</select>


	<sql id="selectFlowForwardEntitiesSql">

		from flow_forward E

		<where>

			1 = 1


			<if test="processId != null and processId != '' ">
				and E.process_id = #{processId}
			</if>

			<if test="processIdLike != null and processIdLike != '' ">
				and E.process_id like #{processIdLike}
			</if>

			<if test="processIds != null and processIds.size != 0">
				and E.process_id IN
				<foreach item="x_processId" index="index" collection="processIds"
					open="(" separator="," close=")">
					#{x_processId}
				</foreach>
			</if>


			<if test="activDefId != null and activDefId != '' ">
				and E.activ_d_id = #{activDefId}
			</if>


			<if test="activDefIds != null and activDefIds.size != 0">
				and E.activ_d_id IN
				<foreach item="x_activDefId" index="index" collection="activDefIds"
					open="(" separator="," close=")">
					#{x_activDefId}
				</foreach>
			</if>


			<if test="activDefNext != null and activDefNext != '' ">
				and E.activ_d_next = #{activDefNext}
			</if>


			<if test="activDefNexts != null and activDefNexts.size != 0">
				and E.activ_d_next IN
				<foreach item="x_activDefNext" index="index" collection="activDefNexts"
					open="(" separator="," close=")">
					#{x_activDefNext}
				</foreach>
			</if>


			<if test="sendtype != null">
				and E.sendtype = #{sendtype}
			</if>

			<if test="sendtypeGreaterThanOrEqual != null">
				and E.sendtype &gt;= #{sendtypeGreaterThanOrEqual}
			</if>

			<if test="sendtypeLessThanOrEqual != null">
				and E.sendtype &lt;= #{sendtypeLessThanOrEqual}
			</if>

			<if test="sendtypes != null and sendtypes.size != 0">
				and E.sendtype IN
				<foreach item="x_sendtype" index="index" collection="sendtypes"
					open="(" separator="," close=")">
					#{x_sendtype}
				</foreach>
			</if>


			<if test="sendtimes != null">
				and E.sendtimes = #{sendtimes}
			</if>

			<if test="sendtimesGreaterThanOrEqual != null">
				and E.sendtimes &gt;= #{sendtimesGreaterThanOrEqual}
			</if>

			<if test="sendtimesLessThanOrEqual != null">
				and E.sendtimes &lt;= #{sendtimesLessThanOrEqual}
			</if>

			<if test="sendtimess != null and sendtimess.size != 0">
				and E.sendtimes IN
				<foreach item="x_sendtimes" index="index" collection="sendtimess"
					open="(" separator="," close=")">
					#{x_sendtimes}
				</foreach>
			</if>


		</where>
	</sql>

</mapper>