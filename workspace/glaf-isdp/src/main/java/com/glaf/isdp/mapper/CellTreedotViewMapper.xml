<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.CellTreedotViewMapper">

	<resultMap id="cellTreedotViewResultMap"	type="com.glaf.isdp.domain.CellTreedotView">
		<id property="id" column="id" jdbcType="VARCHAR"/>
		<result property="tablename" column="tablename" jdbcType="VARCHAR"/>
		<result property="tablenameS" column="tablename_s" jdbcType="VARCHAR"/>
		<result property="alldname" column="alldname" jdbcType="VARCHAR"/>
		<result property="allfname" column="allfname" jdbcType="VARCHAR"/>
		<result property="indexId" column="index_id" jdbcType="INTEGER"/>
		<result property="listno" column="listno" jdbcType="INTEGER"/>
		<result property="intrad" column="intrad" jdbcType="INTEGER"/>
		<result property="intwbslevel" column="intwbslevel" jdbcType="INTEGER"/>
	</resultMap>

	<resultMap id="cellTreedotViewHashMap"	type="java.util.HashMap">
		<id property="id" column="id" jdbcType="VARCHAR"/>
		<result property="tablename" column="tablename" jdbcType="VARCHAR"/>
		<result property="tablenameS" column="tablename_s" jdbcType="VARCHAR"/>
		<result property="alldname" column="alldname" jdbcType="VARCHAR"/>
		<result property="allfname" column="allfname" jdbcType="VARCHAR"/>
		<result property="indexId" column="index_id" jdbcType="INTEGER"/>
		<result property="listno" column="listno" jdbcType="INTEGER"/>
		<result property="intrad" column="intrad" jdbcType="INTEGER"/>
		<result property="intwbslevel" column="intwbslevel" jdbcType="INTEGER"/>
	</resultMap>
 
 
	<insert id="insertCellTreedotView" parameterType="com.glaf.isdp.domain.CellTreedotView">
		insert into cell_treedot_view 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    id
			<if test="tablename != null">
				,tablename 
			</if>
			<if test="tablenameS != null">
				,tablename_s 
			</if>
			<if test="alldname != null">
				,alldname 
			</if>
			<if test="allfname != null">
				,allfname 
			</if>
			<if test="indexId != null">
				,index_id 
			</if>
			<if test="listno != null">
				,listno 
			</if>
			<if test="intrad != null">
				,intrad 
			</if>
			<if test="intwbslevel != null">
				,intwbslevel 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="tablename != null">
				,#{tablename, jdbcType=VARCHAR}
			</if>
			<if test="tablenameS != null">
				,#{tablenameS, jdbcType=VARCHAR}
			</if>
			<if test="alldname != null">
				,#{alldname, jdbcType=VARCHAR}
			</if>
			<if test="allfname != null">
				,#{allfname, jdbcType=VARCHAR}
			</if>
			<if test="indexId != null">
				,#{indexId, jdbcType=INTEGER}
			</if>
			<if test="listno != null">
				,#{listno, jdbcType=INTEGER}
			</if>
			<if test="intrad != null">
				,#{intrad, jdbcType=INTEGER}
			</if>
			<if test="intwbslevel != null">
				,#{intwbslevel, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	 
	<update id="updateCellTreedotView" parameterType="com.glaf.isdp.domain.CellTreedotView">
		update
		    cell_treedot_view
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="tablename != null">
				tablename = #{tablename, jdbcType=VARCHAR},
			</if>
			<if test="tablenameS != null">
				tablename_s = #{tablenameS, jdbcType=VARCHAR},
			</if>
			<if test="alldname != null">
				alldname = #{alldname, jdbcType=VARCHAR},
			</if>
			<if test="allfname != null">
				allfname = #{allfname, jdbcType=VARCHAR},
			</if>
			<if test="indexId != null">
				index_id = #{indexId, jdbcType=INTEGER},
			</if>
			<if test="listno != null">
				listno = #{listno, jdbcType=INTEGER},
			</if>
			<if test="intrad != null">
				intrad = #{intrad, jdbcType=INTEGER},
			</if>
			<if test="intwbslevel != null">
				intwbslevel = #{intwbslevel, jdbcType=INTEGER},
			</if>
		</trim>
		where
          id = #{id, jdbcType=VARCHAR}
		
	</update>

 
	<delete id="deleteCellTreedotViewById" parameterType="string"> 
        delete from cell_treedot_view
        where id = #{id}
	</delete>
	

	<delete id="deleteCellTreedotViews" parameterType="com.glaf.isdp.query.CellTreedotViewQuery">
		delete from cell_treedot_view
		where ( id IN
		<foreach item="x_rowId" index="index" collection="rowIds" open="(" separator="," close=")">
              #{x_rowId}
		</foreach>
		)
	</delete>


	<select id="getCellTreedotViewById" parameterType="string" resultMap="cellTreedotViewResultMap">
		select * from cell_treedot_view where id = #{id}
	</select>


	<select id="getCellTreedotViewCount" 
		parameterType="map"
		resultType="int">
		select count(*)
		<include refid="selectCellTreedotViewsSql" />
	</select>


	<select id="getCellTreedotViewCountByQueryCriteria" 
		parameterType="com.glaf.isdp.query.CellTreedotViewQuery"
		resultType="int">
		select count(*)
		<include refid="selectCellTreedotViewsSql" />
	</select>


	<select id="getCellTreedotViews" 
		parameterType="map"
		resultMap="cellTreedotViewResultMap">
		select E.*
		<include refid="selectCellTreedotViewsSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>

	<select id="getCellTreedotViewsByQueryCriteria" 
		parameterType="com.glaf.isdp.query.CellTreedotViewQuery"
		resultMap="cellTreedotViewResultMap">
		select E.*
		<include refid="selectCellTreedotViewsSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>


	<sql id="selectCellTreedotViewsSql">

		from cell_treedot_view E
		 
		<where>

		       1 = 1  

	        
			<if test="tablename != null and tablename != '' ">
				and E.tablename = #{tablename}
			</if>

			<if test="tablenameLike != null and tablenameLike != '' ">
				and E.tablename like #{tablenameLike}
			</if>

			<if test="tablenames != null and tablenames.size() &gt; 0">
			    and E.tablename IN
				<foreach item="x_tablename" index="index" collection="tablenames" 
					open="(" separator="," close=")">
                  #{x_tablename}
				</foreach>
			</if>

	        
			<if test="tablenameS != null and tablenameS != '' ">
				and E.tablename_s = #{tablenameS}
			</if>

			<if test="tablenameSLike != null and tablenameSLike != '' ">
				and E.tablename_s like #{tablenameSLike}
			</if>

			<if test="tablenameSs != null and tablenameSs.size() &gt; 0">
			    and E.tablename_s IN
				<foreach item="x_tablenameS" index="index" collection="tablenameSs" 
					open="(" separator="," close=")">
                  #{x_tablenameS}
				</foreach>
			</if>

	        
			<if test="alldname != null and alldname != '' ">
				and E.alldname = #{alldname}
			</if>

			<if test="alldnameLike != null and alldnameLike != '' ">
				and E.alldname like #{alldnameLike}
			</if>

			<if test="alldnames != null and alldnames.size() &gt; 0">
			    and E.alldname IN
				<foreach item="x_alldname" index="index" collection="alldnames" 
					open="(" separator="," close=")">
                  #{x_alldname}
				</foreach>
			</if>

	        
			<if test="allfname != null and allfname != '' ">
				and E.allfname = #{allfname}
			</if>

			<if test="allfnameLike != null and allfnameLike != '' ">
				and E.allfname like #{allfnameLike}
			</if>

			<if test="allfnames != null and allfnames.size() &gt; 0">
			    and E.allfname IN
				<foreach item="x_allfname" index="index" collection="allfnames" 
					open="(" separator="," close=")">
                  #{x_allfname}
				</foreach>
			</if>


			<if test="indexId != null">
				and E.index_id = #{indexId}
			</if>

			<if test="indexIdGreaterThanOrEqual != null">
				and E.index_id &gt;= #{indexIdGreaterThanOrEqual}
			</if>

			<if test="indexIdLessThanOrEqual != null">
				and E.index_id &lt;= #{indexIdLessThanOrEqual}
			</if>

			<if test="indexIds != null and indexIds.size() &gt; 0">
			    and E.index_id IN
				<foreach item="x_indexId" index="index" collection="indexIds" 
					open="(" separator="," close=")">
                  #{x_indexId}
				</foreach>
			</if>

			<if test="intrad != null">
				and E.intrad = #{intrad}
			</if>

			<if test="intradGreaterThanOrEqual != null">
				and E.intrad &gt;= #{intradGreaterThanOrEqual}
			</if>

			<if test="intradLessThanOrEqual != null">
				and E.intrad &lt;= #{intradLessThanOrEqual}
			</if>

			<if test="intrads != null and intrads.size() &gt; 0">
			    and E.intrad IN
				<foreach item="x_intrad" index="index" collection="intrads" 
					open="(" separator="," close=")">
                  #{x_intrad}
				</foreach>
			</if>


			<if test="intwbslevel != null">
				and E.intwbslevel = #{intwbslevel}
			</if>

			<if test="intwbslevelGreaterThanOrEqual != null">
				and E.intwbslevel &gt;= #{intwbslevelGreaterThanOrEqual}
			</if>

			<if test="intwbslevelLessThanOrEqual != null">
				and E.intwbslevel &lt;= #{intwbslevelLessThanOrEqual}
			</if>

			<if test="intwbslevels != null and intwbslevels.size() &gt; 0">
			    and E.intwbslevel IN
				<foreach item="x_intwbslevel" index="index" collection="intwbslevels" 
					open="(" separator="," close=")">
                  #{x_intwbslevel}
				</foreach>
			</if>

			 
		</where>
	</sql>

</mapper>