<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.IsdpTreepnameMapper">

	<resultMap id="treepnameResultMap"	type="com.glaf.isdp.domain.IsdpTreepname">
		<id property="id" column="ID" jdbcType="VARCHAR"/>
		<result property="indexId" column="index_id" jdbcType="INTEGER"/>
		<result property="parentId" column="parent_id" jdbcType="INTEGER"/>
		<result property="num" column="num" jdbcType="VARCHAR"/>
		<result property="indexName" column="index_name" jdbcType="VARCHAR"/>
		<result property="nlevel" column="nlevel" jdbcType="INTEGER"/>
		<result property="showid" column="showid" jdbcType="INTEGER"/>
		<result property="ruleId" column="ruleId" jdbcType="VARCHAR"/>
		<result property="nodeico" column="nodeico" jdbcType="INTEGER"/>
		<result property="fruleId" column="fruleId" jdbcType="VARCHAR"/>
		<result property="wcompany" column="wcompany" jdbcType="VARCHAR"/>
		<result property="listno" column="listno" jdbcType="INTEGER"/>
		<result property="sysId" column="sys_id" jdbcType="VARCHAR"/>
		<result property="domainIndex" column="domain_index" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertTreepname" parameterType="com.glaf.isdp.domain.IsdpTreepname">
		insert into treepname 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="indexId != null">
				,index_id 
			</if>
			<if test="parentId != null">
				,parent_id 
			</if>
			<if test="num != null">
				,num 
			</if>
			<if test="indexName != null">
				,index_name 
			</if>
			<if test="nlevel != null">
				,nlevel 
			</if>
			<if test="showid != null">
				,showid 
			</if>
			<if test="ruleId != null">
				,ruleId 
			</if>
			<if test="nodeico != null">
				,nodeico 
			</if>
			<if test="fruleId != null">
				,fruleId 
			</if>
			<if test="wcompany != null">
				,wcompany 
			</if>
			<if test="listno != null">
				,listno 
			</if>
			<if test="sysId != null">
				,sys_id 
			</if>
			<if test="domainIndex != null">
				,domain_index 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="indexId != null">
				,#{indexId, jdbcType=INTEGER}
			</if>
			<if test="parentId != null">
				,#{parentId, jdbcType=INTEGER}
			</if>
			<if test="num != null">
				,#{num, jdbcType=VARCHAR}
			</if>
			<if test="indexName != null">
				,#{indexName, jdbcType=VARCHAR}
			</if>
			<if test="nlevel != null">
				,#{nlevel, jdbcType=INTEGER}
			</if>
			<if test="showid != null">
				,#{showid, jdbcType=INTEGER}
			</if>
			<if test="ruleId != null">
				,#{ruleId, jdbcType=VARCHAR}
			</if>
			<if test="nodeico != null">
				,#{nodeico, jdbcType=INTEGER}
			</if>
			<if test="fruleId != null">
				,#{fruleId, jdbcType=VARCHAR}
			</if>
			<if test="wcompany != null">
				,#{wcompany, jdbcType=VARCHAR}
			</if>
			<if test="listno != null">
				,#{listno, jdbcType=INTEGER}
			</if>
			<if test="sysId != null">
				,#{sysId, jdbcType=VARCHAR}
			</if>
			<if test="domainIndex != null">
				,#{domainIndex, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	 
	<update id="updateTreepname" parameterType="com.glaf.isdp.domain.IsdpTreepname">
		update treepname
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="indexId != null">
				index_id = #{indexId, jdbcType=INTEGER},
			</if>
			<if test="num != null">
				num = #{num, jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId, jdbcType=INTEGER},
			</if>
			<if test="indexName != null">
				index_name = #{indexName, jdbcType=VARCHAR},
			</if>
			<if test="nlevel != null">
				nlevel = #{nlevel, jdbcType=INTEGER},
			</if>
			<if test="showid != null">
				showid = #{showid, jdbcType=INTEGER},
			</if>
			<if test="ruleId != null">
				ruleId = #{ruleId, jdbcType=VARCHAR},
			</if>
			<if test="nodeico != null">
				nodeico = #{nodeico, jdbcType=INTEGER},
			</if>
			<if test="fruleId != null">
				fruleId = #{fruleId, jdbcType=VARCHAR},
			</if>
			<if test="wcompany != null">
				wcompany = #{wcompany, jdbcType=VARCHAR},
			</if>
			<if test="listno != null">
				listno = #{listno, jdbcType=INTEGER},
			</if>
			<if test="sysId != null">
				sys_id = #{sysId, jdbcType=VARCHAR},
			</if>
			<if test="domainIndex != null">
				domain_index = #{domainIndex, jdbcType=INTEGER},
			</if>
        </trim>
		where
          ID = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteTreepnameById" parameterType="string"> 
        delete from treepname
        where ID = #{id}
	</delete>
	

	<delete id="deleteTreepnames" parameterType="com.glaf.isdp.query.TreepnameQuery">
		delete from treepname
		where ( ID IN
		<foreach item="x_rowId" index="index" collection="rowIds" open="(" separator="," close=")">
              #{x_rowId}
		</foreach>
		)
	</delete>


	<select id="getTreepnameById" parameterType="string" resultMap="treepnameResultMap">
		select * from treepname where ID = #{id}
	</select>
	
	
	<select id="getTreepnamesByDomainIndex" parameterType="string" resultMap="treepnameResultMap">
		select * from treepname 
		where domain_index = #{domain_index}
	</select>


	<select id="getTreepnameCount" 
		parameterType="map"
		resultType="int">
		select count(*)
		<include refid="selectTreepnamesSql" />
	</select>


	<select id="getTreepnameCountByQueryCriteria" 
		parameterType="com.glaf.isdp.query.TreepnameQuery"
		resultType="int">
		select count(*)
		<include refid="selectTreepnamesSql" />
	</select>


	<select id="getTreepnames" 
		parameterType="map"
		resultMap="treepnameResultMap">
		select E.*
		<include refid="selectTreepnamesSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>

	<select id="getTreepnamesByQueryCriteria" 
		parameterType="com.glaf.isdp.query.TreepnameQuery"
		resultMap="treepnameResultMap">
		select E.*
		<include refid="selectTreepnamesSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>


	<sql id="selectTreepnamesSql">

		from treepname E
		 
		<where>

		       1 = 1  

			<if test="indexId != null">
				and E.index_id = #{indexId}
			</if>

			<if test="indexIdGreaterThanOrEqual != null">
				and E.index_id &gt;= #{indexIdGreaterThanOrEqual}
			</if>

			<if test="indexIdLessThanOrEqual != null">
				and E.index_id &lt;= #{indexIdLessThanOrEqual}
			</if>

			<if test="indexIds != null and indexIds.size() &gt; 0">
			    and E.index_id IN
				<foreach item="x_indexId" index="index" collection="indexIds" 
					open="(" separator="," close=")">
                  #{x_indexId}
				</foreach>
			</if>

			<if test="parentId != null">
				and E.parent_id = #{parentId}
			</if>

			<if test="parentIds != null and parentIds.size() &gt; 0">
			    and E.parent_id IN
				<foreach item="x_parentId" index="index" collection="parentIds" 
					open="(" separator="," close=")">
                  #{x_parentId}
				</foreach>
			</if>

			<if test="numLike != null and numLike != '' ">
				and E.num like #{numLike}
			</if>

			<if test="indexNameLike != null and indexNameLike != '' ">
				and E.index_name like #{indexNameLike}
			</if>

			<if test="nlevel != null">
				and E.nlevel = #{nlevel}
			</if>

			<if test="nlevelGreaterThanOrEqual != null">
				and E.nlevel &gt;= #{nlevelGreaterThanOrEqual}
			</if>

			<if test="nlevelLessThanOrEqual != null">
				and E.nlevel &lt;= #{nlevelLessThanOrEqual}
			</if>

			<if test="nlevels != null and nlevels.size() &gt; 0">
			    and E.nlevel IN
				<foreach item="x_nlevel" index="index" collection="nlevels" 
					open="(" separator="," close=")">
                  #{x_nlevel}
				</foreach>
			</if>


			<if test="showid != null">
				and E.showid = #{showid}
			</if>

			<if test="showidGreaterThanOrEqual != null">
				and E.showid &gt;= #{showidGreaterThanOrEqual}
			</if>

			<if test="showidLessThanOrEqual != null">
				and E.showid &lt;= #{showidLessThanOrEqual}
			</if>

			<if test="showids != null and showids.size() &gt; 0">
			    and E.showid IN
				<foreach item="x_showid" index="index" collection="showids" 
					open="(" separator="," close=")">
                  #{x_showid}
				</foreach>
			</if>

	        
			<if test="ruleId != null and ruleId != '' ">
				and E.ruleId = #{ruleId}
			</if>

			<if test="ruleIdLike != null and ruleIdLike != '' ">
				and E.ruleId like #{ruleIdLike}
			</if>

			<if test="ruleIds != null and ruleIds.size() &gt; 0">
			    and E.ruleId IN
				<foreach item="x_ruleId" index="index" collection="ruleIds" 
					open="(" separator="," close=")">
                  #{x_ruleId}
				</foreach>
			</if>

			<if test="fruleId != null and fruleId != '' ">
				and E.fruleId = #{fruleId}
			</if>

			<if test="fruleIdLike != null and fruleIdLike != '' ">
				and E.fruleId like #{fruleIdLike}
			</if>

			<if test="fruleIds != null and fruleIds.size() &gt; 0">
			    and E.fruleId IN
				<foreach item="x_fruleId" index="index" collection="fruleIds" 
					open="(" separator="," close=")">
                  #{x_fruleId}
				</foreach>
			</if>

			<if test="wcompanyLike != null and wcompanyLike != '' ">
				and E.wcompany like #{wcompanyLike}
			</if>
	        
			<if test="sysId != null and sysId != '' ">
				and E.sys_id = #{sysId}
			</if>

			<if test="sysIdLike != null and sysIdLike != '' ">
				and E.sys_id like #{sysIdLike}
			</if>

			<if test="sysIds != null and sysIds.size() &gt; 0">
			    and E.sys_id IN
				<foreach item="x_sysId" index="index" collection="sysIds" 
					open="(" separator="," close=")">
                  #{x_sysId}
				</foreach>
			</if>


			<if test="domainIndex != null">
				and E.domain_index = #{domainIndex}
			</if>

			<if test="domainIndexGreaterThanOrEqual != null">
				and E.domain_index &gt;= #{domainIndexGreaterThanOrEqual}
			</if>

			<if test="domainIndexLessThanOrEqual != null">
				and E.domain_index &lt;= #{domainIndexLessThanOrEqual}
			</if>

			<if test="domainIndexs != null and domainIndexs.size() &gt; 0">
			    and E.domain_index IN
				<foreach item="x_domainIndex" index="index" collection="domainIndexs" 
					open="(" separator="," close=")">
                  #{x_domainIndex}
				</foreach>
			</if>

			 
		</where>
	</sql>

</mapper>