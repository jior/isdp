<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.MyCellTaskMapper">

	<resultMap id="myCellTaskResultMap12"	type="com.glaf.isdp.domain.MyCellTask">
		<id property="id" column="id" jdbcType="VARCHAR"/>
		<result property="name" column="name" jdbcType="VARCHAR"/>
		<result property="isused" column="isused" jdbcType="VARCHAR"/>
		<result property="busiessId" column="busiess_id" jdbcType="VARCHAR"/>
		<result property="celldotIndex" column="celldot_index" jdbcType="INTEGER"/>
		<result property="filedotFileid" column="filedot_fileid" jdbcType="VARCHAR"/>
		<result property="mname" column="mname" jdbcType="VARCHAR"/>
		<result property="sname" column="sname" jdbcType="VARCHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="inttype" column="inttype" jdbcType="INTEGER"/>
		<result property="intcreatetype" column="intcreatetype" jdbcType="INTEGER"/>
		<result property="time1" column="time1" jdbcType="VARCHAR"/>
		<result property="time2" column="time2" jdbcType="VARCHAR"/>
		<result property="time3" column="time3" jdbcType="VARCHAR"/>
		<result property="issave" column="issave" jdbcType="INTEGER"/>
		<result property="isuseworkflow" column="isuseworkflow" jdbcType="INTEGER"/>
		<result property="indexId" column="index_id" jdbcType="INTEGER"/>
		<result property="intflowortask" column="intflowortask" jdbcType="INTEGER"/>
		<result property="fileidPress" column="fileid_press" jdbcType="VARCHAR"/>
		<result property="inshowtaskinfo" column="inshowtaskinfo" jdbcType="VARCHAR"/>
		<result property="filenumid" column="filenumid" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertMyCellTask" parameterType="com.glaf.isdp.domain.MyCellTask">
		insert into myCell_tasks 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    id
			<if test="name != null">
				,name 
			</if>
			<if test="isused != null">
				,isused 
			</if>
			<if test="busiessId != null">
				,busiess_id 
			</if>
			<if test="celldotIndex != null">
				,celldot_index 
			</if>
			<if test="filedotFileid != null">
				,filedot_fileid 
			</if>
			<if test="mname != null">
				,mname 
			</if>
			<if test="sname != null">
				,sname 
			</if>
			<if test="content != null">
				,content 
			</if>
			<if test="inttype != null">
				,inttype 
			</if>
			<if test="intcreatetype != null">
				,intcreatetype 
			</if>
			<if test="time1 != null">
				,time1 
			</if>
			<if test="time2 != null">
				,time2 
			</if>
			<if test="time3 != null">
				,time3 
			</if>
			<if test="issave != null">
				,issave 
			</if>
			<if test="isuseworkflow != null">
				,isuseworkflow 
			</if>
			<if test="indexId != null">
				,index_id 
			</if>
			<if test="intflowortask != null">
				,intflowortask 
			</if>
			<if test="fileidPress != null">
				,fileid_press 
			</if>
			<if test="inshowtaskinfo != null">
				,inshowtaskinfo 
			</if>
			<if test="filenumid != null">
				,filenumid 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="isused != null">
				,#{isused, jdbcType=VARCHAR}
			</if>
			<if test="busiessId != null">
				,#{busiessId, jdbcType=VARCHAR}
			</if>
			<if test="celldotIndex != null">
				,#{celldotIndex, jdbcType=INTEGER}
			</if>
			<if test="filedotFileid != null">
				,#{filedotFileid, jdbcType=VARCHAR}
			</if>
			<if test="mname != null">
				,#{mname, jdbcType=VARCHAR}
			</if>
			<if test="sname != null">
				,#{sname, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="inttype != null">
				,#{inttype, jdbcType=INTEGER}
			</if>
			<if test="intcreatetype != null">
				,#{intcreatetype, jdbcType=INTEGER}
			</if>
			<if test="time1 != null">
				,#{time1, jdbcType=VARCHAR}
			</if>
			<if test="time2 != null">
				,#{time2, jdbcType=VARCHAR}
			</if>
			<if test="time3 != null">
				,#{time3, jdbcType=VARCHAR}
			</if>
			<if test="issave != null">
				,#{issave, jdbcType=INTEGER}
			</if>
			<if test="isuseworkflow != null">
				,#{isuseworkflow, jdbcType=INTEGER}
			</if>
			<if test="indexId != null">
				,#{indexId, jdbcType=INTEGER}
			</if>
			<if test="intflowortask != null">
				,#{intflowortask, jdbcType=INTEGER}
			</if>
			<if test="fileidPress != null">
				,#{fileidPress, jdbcType=VARCHAR}
			</if>
			<if test="inshowtaskinfo != null">
				,#{inshowtaskinfo, jdbcType=VARCHAR}
			</if>
			<if test="filenumid != null">
				,#{filenumid, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>

	 
	<update id="updateMyCellTask" parameterType="com.glaf.isdp.domain.MyCellTask">
		update myCell_tasks
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="isused != null">
				isused = #{isused, jdbcType=VARCHAR},
			</if>
			<if test="busiessId != null">
				busiess_id = #{busiessId, jdbcType=VARCHAR},
			</if>
			<if test="celldotIndex != null">
				celldot_index = #{celldotIndex, jdbcType=INTEGER},
			</if>
			<if test="filedotFileid != null">
				filedot_fileid = #{filedotFileid, jdbcType=VARCHAR},
			</if>
			<if test="mname != null">
				mname = #{mname, jdbcType=VARCHAR},
			</if>
			<if test="sname != null">
				sname = #{sname, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content, jdbcType=VARCHAR},
			</if>
			<if test="inttype != null">
				inttype = #{inttype, jdbcType=INTEGER},
			</if>
			<if test="intcreatetype != null">
				intcreatetype = #{intcreatetype, jdbcType=INTEGER},
			</if>
			<if test="time1 != null">
				time1 = #{time1, jdbcType=VARCHAR},
			</if>
			<if test="time2 != null">
				time2 = #{time2, jdbcType=VARCHAR},
			</if>
			<if test="time3 != null">
				time3 = #{time3, jdbcType=VARCHAR},
			</if>
			<if test="issave != null">
				issave = #{issave, jdbcType=INTEGER},
			</if>
			<if test="isuseworkflow != null">
				isuseworkflow = #{isuseworkflow, jdbcType=INTEGER},
			</if>
			<if test="indexId != null">
				index_id = #{indexId, jdbcType=INTEGER},
			</if>
			<if test="intflowortask != null">
				intflowortask = #{intflowortask, jdbcType=INTEGER},
			</if>
			<if test="fileidPress != null">
				fileid_press = #{fileidPress, jdbcType=VARCHAR},
			</if>
			<if test="inshowtaskinfo != null">
				inshowtaskinfo = #{inshowtaskinfo, jdbcType=VARCHAR},
			</if>
			<if test="filenumid != null">
				filenumid = #{filenumid, jdbcType=VARCHAR},
			</if>
		</trim>
		where
          id = #{id, jdbcType=VARCHAR}
		
	</update>

 
	<delete id="deleteMyCellTaskById" parameterType="string"> 
        delete from myCell_tasks
        where id = #{id}
	</delete>
	

	<delete id="deleteMyCellTask" parameterType="com.glaf.isdp.query.MyCellTaskQuery">
		delete from myCell_tasks
		where ( id IN
		<foreach item="x_rowId" index="index" collection="rowIds" open="(" separator="," close=")">
              #{x_rowId}
		</foreach>
		)
	</delete>
	
	
	<select id="getMyCellTaskById" parameterType="string" resultMap="myCellTaskResultMap12">
		select * from myCell_tasks where id = #{id}
	</select>


	<select id="getMyCellTaskByIndexId" parameterType="map" resultMap="myCellTaskResultMap12">
		
          select * from myCell_tasks where exists(
              select * from myCell_tasks_sub where tasks_id=myCell_tasks.id 
              and index_id = #{indexId} and intistasks = #{intistasks}
          )

	</select>
	

	<select id="getMyCellTaskCount" 
		parameterType="map"
		resultType="int">
		select count(*)
		<include refid="selectMyCellTaskSql" />
	</select>


	<select id="getMyCellTaskCountByQueryCriteria" 
		parameterType="com.glaf.isdp.query.MyCellTaskQuery"
		resultType="int">
		select count(*)
		<include refid="selectMyCellTaskSql" />
	</select>


	<select id="getMyCellTasks" 
		parameterType="map"
		resultType="map">
		select E.*
		<include refid="selectMyCellTaskSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>

	<select id="getMyCellTasksByQueryCriteria" 
		parameterType="com.glaf.isdp.query.MyCellTaskQuery"
		resultMap="myCellTaskResultMap12">
		select E.*
		<include refid="selectMyCellTaskSql" />
		<if test="orderBy != null">
		   order by ${orderBy}
		</if>
	</select>


	<sql id="selectMyCellTaskSql">

		from myCell_tasks E
		 
		<where>

		       1 = 1  

			<if test="nameLike != null and nameLike != '' ">
				and E.name like #{nameLike}
			</if>
	        
			<if test="isused != null and isused != '' ">
				and E.isused = #{isused}
			</if>

	
			<if test="busiessId != null and busiessId != '' ">
				and E.busiess_id = #{busiessId}
			</if>

			<if test="busiessIdLike != null and busiessIdLike != '' ">
				and E.busiess_id like #{busiessIdLike}
			</if>

			<if test="busiessIds != null and busiessIds.size != 0">
			    and E.busiess_id IN
				<foreach item="x_busiessId" index="index" collection="busiessIds" 
					open="(" separator="," close=")">
                  #{x_busiessId}
				</foreach>
			</if>


			<if test="celldotIndex != null">
				and E.celldot_index = #{celldotIndex}
			</if>

			<if test="celldotIndexGreaterThanOrEqual != null">
				and E.celldot_index &gt;= #{celldotIndexGreaterThanOrEqual}
			</if>

			<if test="celldotIndexLessThanOrEqual != null">
				and E.celldot_index &lt;= #{celldotIndexLessThanOrEqual}
			</if>

	        
			<if test="filedotFileid != null and filedotFileid != '' ">
				and E.filedot_fileid = #{filedotFileid}
			</if>

			<if test="filedotFileidLike != null and filedotFileidLike != '' ">
				and E.filedot_fileid like #{filedotFileidLike}
			</if>

			<if test="mnameLike != null and mnameLike != '' ">
				and E.mname like #{mnameLike}
			</if>

			<if test="snameLike != null and snameLike != '' ">
				and E.sname like #{snameLike}
			</if>

			<if test="contentLike != null and contentLike != '' ">
				and E.content like #{contentLike}
			</if>

			<if test="inttype != null">
				and E.inttype = #{inttype}
			</if>

			<if test="inttypeGreaterThanOrEqual != null">
				and E.inttype &gt;= #{inttypeGreaterThanOrEqual}
			</if>

			<if test="inttypeLessThanOrEqual != null">
				and E.inttype &lt;= #{inttypeLessThanOrEqual}
			</if>

			<if test="inttypes != null and inttypes.size != 0">
			    and E.inttype IN
				<foreach item="x_inttype" index="index" collection="inttypes" 
					open="(" separator="," close=")">
                  #{x_inttype}
				</foreach>
			</if>


			<if test="intcreatetype != null">
				and E.intcreatetype = #{intcreatetype}
			</if>

			<if test="intcreatetypeGreaterThanOrEqual != null">
				and E.intcreatetype &gt;= #{intcreatetypeGreaterThanOrEqual}
			</if>

			<if test="intcreatetypeLessThanOrEqual != null">
				and E.intcreatetype &lt;= #{intcreatetypeLessThanOrEqual}
			</if>

		
			<if test="time1 != null and time1 != '' ">
				and E.time1 = #{time1}
			</if>

			<if test="time1Like != null and time1Like != '' ">
				and E.time1 like #{time1Like}
			</if>

			<if test="time1s != null and time1s.size != 0">
			    and E.time1 IN
				<foreach item="x_time1" index="index" collection="time1s" 
					open="(" separator="," close=")">
                  #{x_time1}
				</foreach>
			</if>

	        
			<if test="time2 != null and time2 != '' ">
				and E.time2 = #{time2}
			</if>

			<if test="time2Like != null and time2Like != '' ">
				and E.time2 like #{time2Like}
			</if>

			<if test="time2s != null and time2s.size != 0">
			    and E.time2 IN
				<foreach item="x_time2" index="index" collection="time2s" 
					open="(" separator="," close=")">
                  #{x_time2}
				</foreach>
			</if>

	        
			<if test="time3 != null and time3 != '' ">
				and E.time3 = #{time3}
			</if>

			<if test="time3Like != null and time3Like != '' ">
				and E.time3 like #{time3Like}
			</if>

			<if test="time3s != null and time3s.size != 0">
			    and E.time3 IN
				<foreach item="x_time3" index="index" collection="time3s" 
					open="(" separator="," close=")">
                  #{x_time3}
				</foreach>
			</if>


			<if test="issave != null">
				and E.issave = #{issave}
			</if>

			<if test="issaveGreaterThanOrEqual != null">
				and E.issave &gt;= #{issaveGreaterThanOrEqual}
			</if>

			<if test="issaveLessThanOrEqual != null">
				and E.issave &lt;= #{issaveLessThanOrEqual}
			</if>

			<if test="isuseworkflow != null">
				and E.isuseworkflow = #{isuseworkflow}
			</if>

			<if test="isuseworkflowGreaterThanOrEqual != null">
				and E.isuseworkflow &gt;= #{isuseworkflowGreaterThanOrEqual}
			</if>

			<if test="isuseworkflowLessThanOrEqual != null">
				and E.isuseworkflow &lt;= #{isuseworkflowLessThanOrEqual}
			</if>

			<if test="isuseworkflows != null and isuseworkflows.size != 0">
			    and E.isuseworkflow IN
				<foreach item="x_isuseworkflow" index="index" collection="isuseworkflows" 
					open="(" separator="," close=")">
                  #{x_isuseworkflow}
				</foreach>
			</if>

			<if test="indexId != null">
				and E.index_id = #{indexId}
			</if>

			<if test="indexIdGreaterThanOrEqual != null">
				and E.index_id &gt;= #{indexIdGreaterThanOrEqual}
			</if>

			<if test="indexIdLessThanOrEqual != null">
				and E.index_id &lt;= #{indexIdLessThanOrEqual}
			</if>

			<if test="indexIds != null and indexIds.size != 0">
			    and E.index_id IN
				<foreach item="x_indexId" index="index" collection="indexIds" 
					open="(" separator="," close=")">
                  #{x_indexId}
				</foreach>
			</if>

			<if test="intflowortask != null">
				and E.intflowortask = #{intflowortask}
			</if>

			<if test="intflowortaskGreaterThanOrEqual != null">
				and E.intflowortask &gt;= #{intflowortaskGreaterThanOrEqual}
			</if>

			<if test="intflowortaskLessThanOrEqual != null">
				and E.intflowortask &lt;= #{intflowortaskLessThanOrEqual}
			</if>

			<if test="intflowortasks != null and intflowortasks.size != 0">
			    and E.intflowortask IN
				<foreach item="x_intflowortask" index="index" collection="intflowortasks" 
					open="(" separator="," close=")">
                  #{x_intflowortask}
				</foreach>
			</if>
	        
			<if test="fileidPress != null and fileidPress != '' ">
				and E.fileid_press = #{fileidPress}
			</if>

			<if test="fileidPressLike != null and fileidPressLike != '' ">
				and E.fileid_press like #{fileidPressLike}
			</if>

			<if test="fileidPresss != null and fileidPresss.size != 0">
			    and E.fileid_press IN
				<foreach item="x_fileidPress" index="index" collection="fileidPresss" 
					open="(" separator="," close=")">
                  #{x_fileidPress}
				</foreach>
			</if>
	        
			<if test="inshowtaskinfo != null and inshowtaskinfo != '' ">
				and E.inshowtaskinfo = #{inshowtaskinfo}
			</if>

			<if test="inshowtaskinfoLike != null and inshowtaskinfoLike != '' ">
				and E.inshowtaskinfo like #{inshowtaskinfoLike}
			</if>

			<if test="inshowtaskinfos != null and inshowtaskinfos.size != 0">
			    and E.inshowtaskinfo IN
				<foreach item="x_inshowtaskinfo" index="index" collection="inshowtaskinfos" 
					open="(" separator="," close=")">
                  #{x_inshowtaskinfo}
				</foreach>
			</if>
        
			<if test="filenumid != null and filenumid != '' ">
				and E.filenumid = #{filenumid}
			</if>

			<if test="filenumidLike != null and filenumidLike != '' ">
				and E.filenumid like #{filenumidLike}
			</if>

			<if test="filenumids != null and filenumids.size != 0">
			    and E.filenumid IN
				<foreach item="x_filenumid" index="index" collection="filenumids" 
					open="(" separator="," close=")">
                  #{x_filenumid}
				</foreach>
			</if>
	 
		</where>
	</sql>

</mapper>